# -*- coding:UTF-8 -*-

import requests
from requests.exceptions import RequestException
import re
#import PyV8
import execjs

base_headers= {
     'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36',
    'Accept-Encoding': 'gzip, deflate',
    'ccept-Language': 'zh-CN,zh;q=0.9',
}

def get_page(url, cookie=None):
    headers = dict(base_headers)
    try:
        if cookie:
            headers['cookie'] = cookie
        response = requests.get(url,headers=headers)
        if response.status_code == 200:
            return response.text
        if response.status_code == 521:
           print('访问出错521',url)
           # js_cookie = get_cookie_66ip(response.text) #首次访问 js生成一个cookie
           # print(js_cookie)
           # if js_cookie:
           #     return get_page(url,js_cookie)
        else:
            print('没有抓取到网页:',response.status_code)
            return None
    except RequestException:
        print('抓取页面出错', url)
        return None

def get_cookie_66ip(content=None):
    """
    处理66ip网站返回的json数据，执行得到cookie
    """
    if not content:
        url = 'http://www.66ip.cn/1.html'
        response = requests.get(url, headers=base_headers)
        content = response.text
    param_pattern = re.compile('setTimeout\(\"(\w+)\((\d+)\)\", 200')
    func_pattern = re.compile('200\);(.*?)</script>')
    ret_param = re.findall(param_pattern,content)
    func_ret = re.findall(func_pattern, content)
    if ret_param and func_ret:
        try:
            js_func_str = func_ret[0].replace('eval("qo=eval;qo(po);");'," return po") #删除跳转代码 添加返回cookie结果代码
            jsContext = execjs.compile(js_func_str)
            exe_ret = jsContext.call(ret_param[0][0],ret_param[0][1] )
            cookie_paatern = re.compile('document.cookie=\'(.*?);')
            cookie_ret = re.findall(cookie_paatern, exe_ret)
            return cookie_ret[0]
        except Exception:
            return None




# jsFunc = ("""
# function ly() {
# 				var OJ=78
#                 var qo, mo = "", no = "", oo = [0xa4, 0xfc, 0xcf, 0x4a, 0xa8, 0xe5, 0x74, 0xf2, 0x67, 0xc7, 0xee, 0xe2, 0x7d, 0xef, 0x62, 0x61, 0xeb, 0x72, 0xf0, 0xde, 0xe4, 0xe6, 0x99, 0xff, 0x80, 0x2e, 0xa8, 0x39, 0xb7, 0x2e, 0x0e, 0x6a, 0x00, 0x75, 0xef, 0x1f, 0x9d, 0x6b, 0x45, 0x23, 0xb7, 0x38, 0xb6, 0x9a, 0x62, 0x2e, 0x16, 0xef, 0xd5, 0xb3, 0xcb, 0xab, 0x2a, 0x12, 0x88, 0x12, 0xf3, 0x70, 0x4a, 0x30, 0xa0, 0x05, 0xfc, 0xdc, 0x5b, 0x93, 0x77, 0x5d, 0x4b, 0xc1, 0x82, 0x1f, 0xf6, 0x71, 0x7f, 0x21, 0x01, 0xe4, 0xcc, 0xaa, 0xf8, 0xe6, 0x7d, 0x57, 0x31, 0x8c, 0x6e, 0x7c, 0xfc, 0xde, 0x97, 0x79, 0xef, 0x6a, 0x42, 0x4b, 0x31, 0x07, 0xee, 0x6d, 0x89, 0x6d, 0x4f, 0x5d, 0x33, 0x70, 0x4e, 0x2e, 0x12, 0xf7, 0x6f, 0x45, 0x2d, 0x0d, 0xe2, 0x3c, 0x12, 0xfb, 0xf3, 0x72, 0xe6, 0x4f, 0xa7, 0x2e, 0x8a, 0x93, 0x12, 0x6c, 0x5a, 0xfa, 0xc0, 0x1f, 0x9d, 0x8d, 0x85, 0x47, 0x3f, 0x07, 0x15, 0xc1, 0xac, 0x23, 0xb7, 0xa5, 0x9b, 0x38, 0x1e, 0x16, 0xed, 0xc7, 0x1a, 0xe5, 0xdf, 0xb9, 0x85, 0x95, 0x6f, 0x45, 0x5d, 0x20, 0x77, 0x26, 0xc6, 0xb0, 0xa8, 0xdb, 0x5c, 0xce, 0x5d, 0xd3, 0x34, 0xba, 0x2f, 0x1d, 0x11, 0xb3, 0x97, 0x7b, 0xe1, 0x5a, 0x35, 0x29, 0xa3, 0x38, 0x02, 0x36, 0x2e, 0x86, 0x1d, 0x7d, 0x6f, 0xf7, 0xc5, 0xd7, 0xd9, 0xf8, 0xc2, 0xda, 0x3d, 0xa3, 0xcb, 0x60, 0xe0, 0x53, 0xb5, 0xe7, 0xfb, 0x7c, 0xee, 0x69, 0x76, 0xd4, 0x43, 0xc1, 0x56, 0x78, 0xd8, 0xcc, 0x5d, 0xcf, 0x70, 0xea, 0x61, 0xc1, 0x48, 0x4c, 0xde, 0x53, 0x21, 0xa1, 0x0f, 0x81, 0x1c, 0x7a, 0xe8, 0x7a, 0xf8, 0x6d, 0xcd, 0xc1, 0x31, 0xcf, 0x6c, 0x1d, 0x3b];
#                 qo = "qo=243; do{oo[qo]=(-oo[qo])&0xff; oo[qo]=(((oo[qo]>>5)|((oo[qo]<<3)&0xff))-29)&0xff;} while(--qo>=2);";
#                 eval(qo);
#                 qo = 242;
#                 do {
#                     oo[qo] = (oo[qo] - oo[qo - 1]) & 0xff;
#                 } while (--qo >= 3);qo = 1;
#                 for (; ; ) {
#                     if (qo > 242)
#                         break;
#                     oo[qo] = ((((((oo[qo] + 40) & 0xff) + 126) & 0xff) << 4) & 0xff) | (((((oo[qo] + 40) & 0xff) + 126) & 0xff) >> 4);
#                     qo++;
#                 }
#                 po = "";
#                 for (qo = 1; qo < oo.length - 1; qo++)
#                     if (qo % 5)
#                         po += String.fromCharCode(oo[qo] ^ OJ);
# 				return po
#             }
# """)
# jsContext = execjs.compile(jsFunc)
# print(jsContext.call('ly'))

# ctxt = PyV8.JSContext()
# ctxt.enter()
# func = ctxt.eval("""
#     (
#     function ly() {
# 				var OJ=78
#                 var qo, mo = "", no = "", oo = [0xa4, 0xfc, 0xcf, 0x4a, 0xa8, 0xe5, 0x74, 0xf2, 0x67, 0xc7, 0xee, 0xe2, 0x7d, 0xef, 0x62, 0x61, 0xeb, 0x72, 0xf0, 0xde, 0xe4, 0xe6, 0x99, 0xff, 0x80, 0x2e, 0xa8, 0x39, 0xb7, 0x2e, 0x0e, 0x6a, 0x00, 0x75, 0xef, 0x1f, 0x9d, 0x6b, 0x45, 0x23, 0xb7, 0x38, 0xb6, 0x9a, 0x62, 0x2e, 0x16, 0xef, 0xd5, 0xb3, 0xcb, 0xab, 0x2a, 0x12, 0x88, 0x12, 0xf3, 0x70, 0x4a, 0x30, 0xa0, 0x05, 0xfc, 0xdc, 0x5b, 0x93, 0x77, 0x5d, 0x4b, 0xc1, 0x82, 0x1f, 0xf6, 0x71, 0x7f, 0x21, 0x01, 0xe4, 0xcc, 0xaa, 0xf8, 0xe6, 0x7d, 0x57, 0x31, 0x8c, 0x6e, 0x7c, 0xfc, 0xde, 0x97, 0x79, 0xef, 0x6a, 0x42, 0x4b, 0x31, 0x07, 0xee, 0x6d, 0x89, 0x6d, 0x4f, 0x5d, 0x33, 0x70, 0x4e, 0x2e, 0x12, 0xf7, 0x6f, 0x45, 0x2d, 0x0d, 0xe2, 0x3c, 0x12, 0xfb, 0xf3, 0x72, 0xe6, 0x4f, 0xa7, 0x2e, 0x8a, 0x93, 0x12, 0x6c, 0x5a, 0xfa, 0xc0, 0x1f, 0x9d, 0x8d, 0x85, 0x47, 0x3f, 0x07, 0x15, 0xc1, 0xac, 0x23, 0xb7, 0xa5, 0x9b, 0x38, 0x1e, 0x16, 0xed, 0xc7, 0x1a, 0xe5, 0xdf, 0xb9, 0x85, 0x95, 0x6f, 0x45, 0x5d, 0x20, 0x77, 0x26, 0xc6, 0xb0, 0xa8, 0xdb, 0x5c, 0xce, 0x5d, 0xd3, 0x34, 0xba, 0x2f, 0x1d, 0x11, 0xb3, 0x97, 0x7b, 0xe1, 0x5a, 0x35, 0x29, 0xa3, 0x38, 0x02, 0x36, 0x2e, 0x86, 0x1d, 0x7d, 0x6f, 0xf7, 0xc5, 0xd7, 0xd9, 0xf8, 0xc2, 0xda, 0x3d, 0xa3, 0xcb, 0x60, 0xe0, 0x53, 0xb5, 0xe7, 0xfb, 0x7c, 0xee, 0x69, 0x76, 0xd4, 0x43, 0xc1, 0x56, 0x78, 0xd8, 0xcc, 0x5d, 0xcf, 0x70, 0xea, 0x61, 0xc1, 0x48, 0x4c, 0xde, 0x53, 0x21, 0xa1, 0x0f, 0x81, 0x1c, 0x7a, 0xe8, 0x7a, 0xf8, 0x6d, 0xcd, 0xc1, 0x31, 0xcf, 0x6c, 0x1d, 0x3b];
#                 qo = "qo=243; do{oo[qo]=(-oo[qo])&0xff; oo[qo]=(((oo[qo]>>5)|((oo[qo]<<3)&0xff))-29)&0xff;} while(--qo>=2);";
#                 eval(qo);
#                 qo = 242;
#                 do {
#                     oo[qo] = (oo[qo] - oo[qo - 1]) & 0xff;
#                 } while (--qo >= 3);qo = 1;
#                 for (; ; ) {
#                     if (qo > 242)
#                         break;
#                     oo[qo] = ((((((oo[qo] + 40) & 0xff) + 126) & 0xff) << 4) & 0xff) | (((((oo[qo] + 40) & 0xff) + 126) & 0xff) >> 4);
#                     qo++;
#                 }
#                 po = "";
#                 for (qo = 1; qo < oo.length - 1; qo++)
#                     if (qo % 5)
#                         po += String.fromCharCode(oo[qo] ^ OJ);
# 				return po
#             }
#     )
# """)
#print func()


